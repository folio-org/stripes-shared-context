# This workflow will do a clean install of node dependencies, build the source code,
# run unit tests, perform a SonarCloud scan and publish NPM package ONLY on a tagged release.

# For more information see:
# https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Common FOLIO configurable env:
#   - YARN_TEST_OPTIONS (options to pass to 'yarn test')
#   - SQ_ROOT_DIR (root SQ directory to scan relative to top-level directory)
#   - PUBLISH_MOD_DESCRIPTOR (boolean 'true' or 'false')
#   - COMPILE_TRANSLATION_FILES (boolean 'true' or 'false')

name: buildNPM Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:

jobs:
  build-npm-release:
    if : ${{ startsWith(github.ref, 'refs/tags/v') }}
    env:
      YARN_TEST_OPTIONS: ''
      SQ_ROOT_DIR: './src'
      COMPILE_TRANSLATION_FILES: 'true'
      PUBLISH_MOD_DESCRIPTOR: 'true'
      FOLIO_NPM_REGISTRY: 'https://repository.folio.org/repository/npm-folio/'
      FOLIO_MD_REGISTRY: 'https://folio-registry.dev.folio.org'
      NODEJS_VERSION: '16'
      JEST_JUNIT_OUTPUT_DIR: 'artifacts/jest-junit'
      JEST_COVERAGE_REPORT_DIR: 'artifacts/coverage-jest/lcov-report/'
      BIGTEST_JUNIT_OUTPUT_DIR: 'artifacts/runTest'
      BIGTEST_COVERAGE_REPORT_DIR: 'artifacts/coverage/lcov-report/'
      OKAPI_PULL: '{ "urls" : [ "https://folio-registry.dev.folio.org" ] }'
      SQ_LCOV_REPORT: 'artifacts/coverage-jest/lcov.info'
      SQ_EXCLUSIONS: '**/platform/alias-service.js,**/docs/**,**/node_modules/**,**/examples/**,**/artifacts/**,**/ci/**,Jenkinsfile,**/LICENSE,**/*.css,**/*.md,**/*.json,**/tests/**,**/stories/*.js,**/test/**,**/.stories.js,**/resources/bigtest/interactors/**,**/resources/bigtest/network/**,**/*-test.js,**/*.test.js,**/*-spec.js,**/karma.conf.js,**/jest.config.js'

    runs-on: ubuntu-latest
    steps:
      - uses: folio-org/checkout@v2
        with:
          fetch-depth: 0

      # Runs a single command using the runners shell
      - name: Print tag info
        run: echo "Building release tag, ${GITHUB_REF}"

      - name: Set TAG_VERSION
        run: echo "TAG_VERSION=$(echo ${GITHUB_REF#refs/tags/v})" >> $GITHUB_ENV

      - name: Get version from package.json
        id: package_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'package.json'
          prop_path: 'version'

      - name: Check matching tag and version in package.json
        if: ${{ env.TAG_VERSION != steps.package_version.outputs.prop }}
        run: |
          echo "Tag version, ${TAG_VERSION}, does not match package.json version, ${PACKAGE_VERSION}."
          exit 1
        env:
          PACKAGE_VERSION: ${{ steps.package_version.outputs.prop }}

      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          check-latest: true
          always-auth: true

      - name: Set yarn config
        run: yarn config set @folio:registry $FOLIO_NPM_REGISTRY

      - name: Run yarn install
        run: yarn install --ignore-scripts

      - name: Run yarn list
        run: yarn list --pattern @folio

      - name: Publish yarn.lock
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: yarn.lock
          path: yarn.lock
          retention-days: 5

      - name: Set default branch as env variable
        run: echo "DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV

      - name: Fetch branches for SonarCloud
        run: git fetch --no-tags ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY} +refs/heads/${{ env.DEFAULT_BRANCH }}:refs/remotes/origin/${{ env.DEFAULT_BRANCH }}

      - name: Set up NPM environment for publishing
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODEJS_VERSION }}
          check-latest: true
          always-auth: true

      - name: Set _auth in .npmrc
        run: |
          npm config set @folio:registry $FOLIO_NPM_REGISTRY
          npm config set //repository.folio.org/repository/npm-folio/:_auth $NODE_AUTH_TOKEN
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Exclude some CI-generated artifacts in package
        run: |
          echo ".github" >> .npmignore
          echo ".scannerwork" >> .npmignore
          cat .npmignore

      - name: Publish NPM to FOLIO NPM registry
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
